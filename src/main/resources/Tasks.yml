openapi: "3.0.2"
info:
  title: Tasks appliaction
  version: "0.0.1-SNAPSHOT"
  description: Simple CRUD application for keeping track of tasks
servers:
  - url: http://localhost:8080
    description: Local server

tags:
  - name: tasks
    description: Operations with tasks

paths:
  /tasks:
    get:
      description: Get all tasks
      tags:
        - tasks
      operationId: getTasks
      responses:
        "200":
          description: Array of tasks
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskRetrieve"
    post:
      description: Create a new task
      tags:
        - tasks
      operationId: createTask
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/TaskCreate"
      responses:
        "200":
          description: Created task
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskRetrieve"
        "400":
          description: Invalid input
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ValidationError"

  /tasks/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    get:
      description: Get a task
      tags:
        - tasks
      operationId: getTask
      responses:
        "200":
          description: Task instance
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskRetrieve"
        "404":
          description: Task not found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    put:
      description: Update a task
      tags:
        - tasks
      operationId: updateTask
      responses:
        "200":
          description: Updated task
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskRetrieve"
        "400":
          description: Invalid input
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: Task not found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a task
      tags:
        - tasks
      operationId: deleteTask
      responses:
        "204":
          description: Deleted

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/UUID"

  schemas:
    UUID:
      type: string
      format: uuid
      example: 3d2370d4-b07a-47e3-9503-265be3925f7c
    TaskRetrieve:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
          minLength: 3
          example: Buy milk
        done:
          type: boolean
          example: false
      required:
        - id
        - name
        - done
    TaskCreate:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          example: Water the plants
      required:
        - name
    TaskUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          example: Buy eggs
        done:
          type: boolean
          example: true
    Error:
      type: object
      properties:
        message:
          type: string
          example: Task not found
      required:
        - message
    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: Validation error
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: name
              message:
                type: string
                example: must not be null
            required:
              - name
              - message
      required:
        - message
        - errors
